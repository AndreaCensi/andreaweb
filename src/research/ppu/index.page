---
title: On robot motion planning with uncertainty
Subject_short: Planning with uncertainty
PURL: http://purl.org/censi/2007/ppu
Date: 2007-08-22
inMenu: true
orderInfo: -10
---

- A.&nbsp;Censi, D. Calisi, [A. De Luca][deluca], [G. Oriolo][oriolo] *"A Bayesian framework for optimal motion planning with uncertainty"*, to appear in ICRA'08

  - [final version (PDF)][ppu-08icra-final]

**Abstract** -- 
Modeling robot motion planning with uncertainty in a
Bayesian framework leads to a computationally intractable
stochastic control problem. We seek hypotheses that can
justify a separate implementation of control, localization
and planning. In the end, we reduce the stochastic control
problem to path-planning in the extended space of poses&nbsp;x&nbsp;covariances; the transitions between states are modeled
through the use of the Fisher information matrix. In this
framework, we consider two problems: minimizing the
execution time, and minimizing the final covariance, with
an upper bound on the execution time. Two correct and
complete algorithms are presented. The first is the direct
extension of classical graph-search algorithms in the
extended space. The second one is a back-projection
algorithm: uncertainty constraints are propagated backward
from the goal towards the start state.

### Additional material ###

- Master's thesis, May 2007  ([PDF][ppu-thesis])

- C++ implementation of the method:
  - [only the source code][ppu-sw] (600KB tgz)
  - [the source code, plus the animations][ppu-sw-figures] (15MB tgz)

[ppu-08icra-draft]: http://purl.org/censi/research/2008-icra-ppu-draft.pdf
[ppu-08icra-final]: http://purl.org/censi/research/2008-icra-ppu.pdf

[ppu-thesis]: http://purl.org/censi/research/2007-thesis-censi-ppu.pdf
[ppu-sw]:  http://purl.org/censi/research/2008-icra-ppu/2008-icra-ppu-sw.tgz
[ppu-sw-figures]:  http://purl.org/censi/research/2008-icra-ppu/2008-icra-ppu-sw-figures.tgz


### Animations in Flash format ###

These are much fun to see! --- well, only if you are into planning.

The animations are Flash objects: **use the left and right arrows to make the search process go back and forward**. I did not make an MPEG video for ICRA with these, because it would take well over 5MB to present these with a good resolution. The animations are also available in PDF format -- click the link under the Flash object.

#### Environment shown in the paper ####

 {:images: style="float: right; border: solid 1px black;"}

 ![First experiment](due_curve_small.png){:images}


- Planning **without** uncertainty (for comparison):

   - [A\*](videos/due_curve-ppa-video.html)
   - [wavefront expansion](videos/due_curve-ppw-video.html)

- Planning with uncertainty; solving PPU-MinTime: 

   - [forward search, A\*](videos/due_curve-fa2-video.html)
   - [backward search, A\*](videos/due_curve-ba2-video.html)
   - [backward search, wavefront expansion](videos/due_curve-bw3-video.html)

- Planning with uncertainty; solving PPU-MinCov: 

  - [forward search, wavefront expansion](videos/due_curve-fw2-video.html)


#### Another simple environment with non-orthogonal walls ####

![Another experiment](corner2_small.png){:images}

- Planning **without** uncertainty (for comparison):

   - [A\*](videos/corner2-ppa-video.html)
   - [wavefront expansion](videos/corner2-ppw-video.html)

- Planning with uncertainty; solving PPU-MinTime: 

   - [forward search, A\*](videos/corner2-fa2-video.html)
   - [backward search, A\*](videos/corner2-ba2-video.html)
   - [backward search, wavefront expansion](videos/corner2-bw3-video.html)

- Planning with uncertainty; solving PPU-MinCov: 

  - [forward search, wavefront expansion](videos/corner2-fw2-video.html)

### Guided tour ###

The animations show the number of nodes in the OPEN queue (turquoise numbers), 
and in the VISITED (closed) set (violet numbers).

![Legend for the animation](legend_small.png)

For a start, you might want to take a look at [PP without uncertainty using A\*](videos/corner2-ppa-video.html). Nothing surprising here, of course.
But notice: for each pose, there is, at most, *one* node, in
either the OPEN or VISITED set. This is because the dominance relation
used is *a total order*. In this HTML text, let &raquo; be the dominance relation. Then, for simple PP,  if n<sub>1</sub> and n<sub>2</sub> have
the same pose, either n<sub>1</sub> &raquo; n<sub>2</sub> or n<sub>2</sub> &raquo; n<sub>1</sub>.

This is not true when using A\* to solve path planning with uncertainty (PPU). For example, in the same situation ([env2-forward-A\*](videos/corner2-fa2-video.html)), there are several nodes per cell
in both OPEN and VISITED. 

The point is that in PPU the covariance is part of the state
space and should not be treated like another "cost". Once one gets
this intuition, the rest is downhill.

There are many interesting sights to see, if you peruse through the
animations. In [env1-forward-A\*](videos/due_curve-fa2-video.html), note the successive "waves" of nodes. The first waves that fail are the direct paths which
are not localized enough.

Also in the case of [env2-forward-A\*](videos/corner2-fa2-video.html), the search process tries to go straight to the goal, but no direct path is feasible. Then, a new path is tried, which differs slightly at the beginning, and then goes straight to the goal; this goes on until a path which acquires enough information is found.

The backward algorithm is conceptually much more complicated. In this
case, the nodes do not contain "states" (a pose + a covariance), but
*constraints* on the states. However, graphically, they behave in the same way.
See for example [env2-backward-A\*](videos/due_curve-ba2-video.html).

For the backward method, at the end of the animation there is 
a representation of the *reverse* path (q<sub>k</sub>,\{M<sub>i</sub>\}<sub>k</sub>).
The pink ellipses represent \{M<sub>i</sub>\}<sub>k</sub> -- the back-projection of CONSTRAINTS(q) -- and together they form an "envelope" in which
the *forward* path (q<sub>k</sub>, &Sigma;<sub>k</sub>) must pass.

![Back-projection of constraints](envelope_small.png)

It could happen (because of unmodelled things), that, during execution, the actual covariance is different from the planned covariance. In that case, the planned path is still admissible and optimal, as long as the actual covariance is inside the envelope.




[Calisi]: http://mindreamz.net/
[DeLuca]: http://www.dis.uniroma1.it/~labrob/people/deluca/deluca.html
[Oriolo]: http://www.dis.uniroma1.it/~labrob/people/oriolo/oriolo.html



